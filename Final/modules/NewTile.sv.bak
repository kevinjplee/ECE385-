module NewTile(
    input logic clk,
    output logic[2:0] out_data[15:0],
    output logic[4:0] out_x,out_y,
    output logic[2:0] out_type,
    output logic[3:0] out_r
);

unsigned int random_num;
logic [31:0] random_num2;

always_ff @(posedge clk) begin
    random_num <= $urandom();
    random_num2 <= ($urandom()%7)+1;        //may have bug
    case(random_num%7):
    0:  out_data[0] <= 3'b0;
        out_data[1] <= 3'b0;
        out_data[2] <= 3'b0;
        out_data[3] <= 3'b0;
        out_data[4] <= 3'b001;
        out_data[5] <= 3'b001;
        out_data[6] <= 3'b001;
        out_data[7] <= 3'b001;
        out_data[8] <= 3'b0;
        out_data[9] <= 3'b0;
        out_data[10] <= 3'b0;
        out_data[11] <= 3'b0;
        out_data[12] <= 3'b0;
        out_data[13] <= 3'b0;
        out_data[14] <= 3'b0;
        out_data[15] <= 3'b0;
        out_type <= 3'b001;
    1:  out_data[0] <= 3'b010;
        out_data[1] <= 3'b0;
        out_data[2] <= 3'b0;
        out_data[3] <= 3'b0;
        out_data[4] <= 3'b010;
        out_data[5] <= 3'b010;
        out_data[6] <= 3'b010;
        out_data[7] <= 3'b0;
        out_data[8] <= 3'b0;
        out_data[9] <= 3'b0;
        out_data[10] <= 3'b0;
        out_data[11] <= 3'b0;
        out_data[12] <= 3'b0;
        out_data[13] <= 3'b0;
        out_data[14] <= 3'b0;
        out_data[15] <= 3'b0;
        out_type <= 3'b010;
    2:  out_data[0] <= 3'b0;
        out_data[1] <= 3'b0;
        out_data[2] <= 3'b011;
        out_data[3] <= 3'b0;
        out_data[4] <= 3'b011;
        out_data[5] <= 3'b011;
        out_data[6] <= 3'b011;
        out_data[7] <= 3'b0;
        out_data[8] <= 3'b0;
        out_data[9] <= 3'b0;
        out_data[10] <= 3'b0;
        out_data[11] <= 3'b0;
        out_data[12] <= 3'b0;
        out_data[13] <= 3'b0;
        out_data[14] <= 3'b0;
        out_data[15] <= 3'b0;
        out_type <= 3'b011;
    3:  out_data[0] <= 3'b100;
        out_data[1] <= 3'b100;
        out_data[2] <= 3'b0;
        out_data[3] <= 3'b0;
        out_data[4] <= 3'b100;
        out_data[5] <= 3'b100;
        out_data[6] <= 3'b0;
        out_data[7] <= 3'b0;
        out_data[8] <= 3'b0;
        out_data[9] <= 3'b0;
        out_data[10] <= 3'b0;
        out_data[11] <= 3'b0;
        out_data[12] <= 3'b0;
        out_data[13] <= 3'b0;
        out_data[14] <= 3'b0;
        out_data[15] <= 3'b0;
        out_type <= 3'b100;
    4:  out_data[0] <= 3'b0;
        out_data[1] <= 3'b101;
        out_data[2] <= 3'b101;
        out_data[3] <= 3'b0;
        out_data[4] <= 3'b101;
        out_data[5] <= 3'b101;
        out_data[6] <= 3'b0;
        out_data[7] <= 3'b0;
        out_data[8] <= 3'b0;
        out_data[9] <= 3'b0;
        out_data[10] <= 3'b0;
        out_data[11] <= 3'b0;
        out_data[12] <= 3'b0;
        out_data[13] <= 3'b0;
        out_data[14] <= 3'b0;
        out_data[15] <= 3'b0;
        out_type <= 3'b101;
    5:  out_data[0] <= 3'b0;
        out_data[1] <= 3'b110;
        out_data[2] <= 3'b0;
        out_data[3] <= 3'b0;
        out_data[4] <= 3'b110;
        out_data[5] <= 3'b110;
        out_data[6] <= 3'b110;
        out_data[7] <= 3'b0;
        out_data[8] <= 3'b0;
        out_data[9] <= 3'b0;
        out_data[10] <= 3'b0;
        out_data[11] <= 3'b0;
        out_data[12] <= 3'b0;
        out_data[13] <= 3'b0;
        out_data[14] <= 3'b0;
        out_data[15] <= 3'b0;
        out_type <= 3'b110;
    6:  out_data[0] <= 3'b111;
        out_data[1] <= 3'b111;
        out_data[2] <= 3'b0;
        out_data[3] <= 3'b0;
        out_data[4] <= 3'b0;
        out_data[5] <= 3'b111;
        out_data[6] <= 3'b111;
        out_data[7] <= 3'b0;
        out_data[8] <= 3'b0;
        out_data[9] <= 3'b0;
        out_data[10] <= 3'b0;
        out_data[11] <= 3'b0;
        out_data[12] <= 3'b0;
        out_data[13] <= 3'b0;
        out_data[14] <= 3'b0;
        out_data[15] <= 3'b0;
        out_type <= 3'b111;
    endcase
    out_x <= random_num2[4:0];          //may have bug
    out_y <= 5'b00011;
    out_r <= 4'b0;
end

endmodule